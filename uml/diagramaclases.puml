@startuml

skinparam classAttributeIconSize 0

class Principal {
  + main(String[]): void
  + mostrarMenu(): void
  + gestionarOpciones(int, Concesionario): void
  + crearVehiculo(Concesionario): void
}

class Concesionario {
  - stockVehiculos: Vehiculo[]
  - contadorVehiculos: int
  + buscarVehiculo(String): int
  + insertarVehiculo(Vehiculo): boolean
  + asignarPropietario(String): boolean
  + informacionVehiculo(String): String
  + listadoVehiculos(): String[]
  + listadoVehiculosDetalle(): String[]
  + esAlmacenLleno(): int
  - esPosicionValida(int): boolean
  + calcularRiesgoFinal(String): void
  + calcularDepreciacionFinal(String): void
}



    abstract class Vehiculo {
      # matricula: String
      # marca: String
      # modelo: String
      # anoFabricacion: int
      # kilometraje: int
      # precio: double
      # isDisponible: boolean
      # propietario: Persona
      + pedirValidarMatricula(String): String
      + {abstract} calcularRiesgo(): String
      # calcularAntiguedad(): int
      + {abstract} calcularDepreciacion(): double
      # calcularDepreciacionEdad(double): double
      # calcularDepreciacionKilometraje(double): double
      + imprimirDatosComunes(): String
      + {abstract} imprimirDatosVehiculo(): String
    }

    class Persona {
      - nombre: String
      - apellidos: String
      - dni: Dni
      - anoNacimiento: int
      - anoCarnet: int
      + solicitarDatosPersona(): Persona
      + toString(): String
    }

    class Dni {
      - numDni: int
      - LETRAS_DNI: String
      - calcularLetraNif(int): char
      - extraerLetraNif(String): char
      + extraerNumeroNif(String): int
      + obtenerNif(int): String
      + pedirValidarNif(String): String
      + validarNif(String): boolean
      + dniToString(): String
    }

        class Camion {
          - capacidadCarga: double
          - numEjes: int
          - longitudRemolque: double
          - potenciaMotor: int
          + calcularRiesgo(): String
          + calcularDepreciacion(): double
          + imprimirDatosVehiculo(): String
        }

        abstract class Coche {
          - numPuertas: int
          - tipoCombustible: String
          - capacidadMaletero: int
          - traccion: Traccion
          + pedirValidarTraccion(String): Traccion
          + {abstract} calcularRiesgo(): String
          + {abstract} calcularDepreciacion(): double
          + imprimirDatosVehiculo(): String
        }

        class CocheDeportivo {
          - aceleracion0a100: double
          - potenciaCv: int
          - tieneModoPista: boolean
          + calcularRiesgo(): String
          + calcularDepreciacion(): double
          + imprimirDatosVehiculo(): String
        }

        class CocheSedan {
          - espacioInterior: double
          - nivelConfort: NivelConfort
          + pedirValidarConfort(String): NivelConfort
          + calcularRiesgo(): String
          + calcularDepreciacion(): double
          + imprimirDatosVehiculo(): String
        }

        class CocheSuv {
          - capacidadOffroad: boolean
          - alturaLibreSuelo: double
          + calcularRiesgo(): String
          + calcularDepreciacion(): double
          + imprimirDatosVehiculo(): String
        }

        enum NivelConfort{
          BASICO
          MEDIO
          PREMIUM
        }

        enum Traccion {
          DELANTERA
          TRASERA
          TOTAL
        }

        enum TipoTransmision{
          MANUAL
          AUTOMATICA
        }

        abstract class Moto {
          - cilindrada: int
          - peso: int
          - alturaAsiento: double
          - tipoTransmision: TipoTransmision
          + pedirValidarTipoTransmision(String): TipoTransmision
          + {abstract} calcularRiesgo(): String
          + {abstract} calcularDepreciacion(): double
          + imprimirDatosVehiculo(): String
        }

        class MotoDeportiva {
          - velocidadMaxima: double
          - tieneQuickShifter: boolean
          + calcularRiesgo(): String
          + calcularDepreciacion(): double
          + imprimirDatosVehiculo(): String
        }

        class MotoScooter {
          - espacioBajoAsiento: int
          + calcularRiesgo(): String
          + calcularDepreciacion(): double
          + imprimirDatosVehiculo(): String
        }

    class Utilidades {
      + sc: Scanner
      - formatoEsp: DateTimeFormatter
      + pedirValidarBoolean(String): Boolean
      + pedirValidarString(String): String
      + pedirValidarEntero(int, int, String): int
      + pedirValidarDouble(double, String): double
      + pedirValidarArrayStrings(int, int, String): String[]
      + validarFechaMenorHoy(LocalDate): boolean
      + pedirValidarFechaddmmaaaa(String): LocalDate
    }

    interface Imprimible {
      + imprimirDatosVehiculo(): String
    }

    interface Valorable {
      + calcularDepreciacion(): double
    }
    interface Asegurable {
      + calcularRiesgo(): String
    }



Principal "1" ..> "0..*" Camion : crea instancia
Principal "1" ..> "0..*" CocheDeportivo : crea instancia
Principal "1" ..> "0..*" CocheSedan : crea instancia
Principal "1" ..> "0..*" CocheSuv : crea instancia
Principal "1" ..> "0..*" MotoDeportiva : crea instancia
Principal "1" ..> "0..*" MotoScooter : crea instancia

Principal "1" ..> "1" Utilidades : usa

Principal "1" ..> "1" Vehiculo : validación matrícula
Principal "1" ..> "1" Utilidades : validación entrada datos

Principal "1" ..> "1" Traccion : usa
Principal "1" ..> "1" NivelConfort : usa
Principal "1" ..> "1" TipoTransmision : usa

Concesionario "1" o-- "0..*" Vehiculo : crea stockVehiculos
Concesionario "1" ..> "0..*" Persona : propietario

Vehiculo "1" *-- "0..1" Persona : es propietario
Persona "1" ..> "1" Utilidades : usa
Dni "1" --* "1" Persona : es parte de
Dni "1" ..> "1" Utilidades : usa

Vehiculo <|-- Camion :herencia

Vehiculo <|-- Coche :herencia
Coche <|-- CocheDeportivo :herencia
Coche <|-- CocheSedan :herencia
Coche <|-- CocheSuv :herencia
Coche "1" --> "1" Traccion
CocheSedan "1" --> "1" NivelConfort

Vehiculo <|-- Moto :herencia
Moto <|-- MotoDeportiva :herencia
Moto <|-- MotoScooter :herencia
Moto "1" --> "1" TipoTransmision

Vehiculo ..|> Asegurable
Vehiculo ..|> Imprimible
Vehiculo ..|> Valorable

@enduml